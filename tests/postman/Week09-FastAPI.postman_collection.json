{
	"info": {
		"_postman_id": "f428cf65-c3b9-4836-8ffd-ed0e4535f96b",
		"name": "Week09-FastAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13972989"
	},
	"item": [
		{
			"name": "Admin User",
			"item": [
				{
					"name": "Admin Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"ADMIN_ACCESS\", pm.response.json().access_token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Token type is bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql(\"bearer\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "admincito",
									"type": "text"
								},
								{
									"key": "password",
									"value": "admincito",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BASE}}/auth/token",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"auth",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Employee User",
			"item": [
				{
					"name": "List Roles",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE}}/users/roles/",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"users",
								"roles",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Employee (Admin Credentials)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"EMPLOYEE_ID\", pm.response.json().data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Email is correct\", function () {\r",
									"    var jsonData = pm.response.json().data;\r",
									"    pm.expect(jsonData.email).to.eql(\"empleadito@example.com\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"empleadito\",\r\n  \"email\": \"empleadito@example.com\",\r\n  \"password\": \"empleadito\",\r\n  \"role_id\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE}}/users/",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Employee Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"EMPLOYEE_ACCESS\", pm.response.json().access_token);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Token type is bearer\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.token_type).to.eql(\"bearer\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "username",
									"value": "empleadito",
									"type": "text"
								},
								{
									"key": "password",
									"value": "empleadito",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BASE}}/auth/token",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"auth",
								"token"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "Invalid Requests",
					"item": [
						{
							"name": "Customer Empty Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"email\": \"customer@email.com\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/customers/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"customers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Whitespace Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"\",\r\n  \"last_name\": \"        \",\r\n  \"email\": \"customer@email.com\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/customers/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"customers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Customer Invalid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"email\": \"customer\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/customers/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"customers",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Unauthorized Requests",
					"item": [
						{
							"name": "List Customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE}}/customers/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"customers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BASE}}/customers/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"customers",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{BASE}}/customers/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"customers",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Customer",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/customers/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"customers",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"CUSTOMER_ID\", pm.response.json().data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Email is correct\", function () {\r",
									"    var jsonData = pm.response.json().data;\r",
									"    pm.expect(jsonData.email).to.eql(\"customer@email.com\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{EMPLOYEE_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"email\": \"customer@email.com\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE}}/customers/",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"customers",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Email is correct\", function () {\r",
									"    var jsonData = pm.response.json().data;\r",
									"    pm.expect(jsonData.email).to.eql(\"new_email@email.com\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{EMPLOYEE_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"email\": \"new_email@email.com\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE}}/customers/{{CUSTOMER_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"customers",
								"{{CUSTOMER_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Email is correct\", function () {\r",
									"    var jsonData = pm.response.json().data;\r",
									"    pm.expect(jsonData.email).to.eql(\"new_email@email.com\");\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{EMPLOYEE_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE}}/customers/{{CUSTOMER_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"customers",
								"{{CUSTOMER_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cast",
			"item": [
				{
					"name": "Invalid Requests",
					"item": [
						{
							"name": "Gender Empty Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"gender\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/genders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"genders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Gender Whitespace Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"gender\": \"       \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/genders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"genders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Role Empty Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"role\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/roles/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"roles",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Role Whitespace Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"role\": \"         \"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/roles/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"roles",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Member Empty Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"\",\r\n  \"last_name\": \"\",\r\n  \"gender_id\": 0,\r\n  \"role_id\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/members/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"members",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Member Whitespace Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"     \",\r\n  \"last_name\": \"        \",\r\n  \"gender_id\": 0,\r\n  \"role_id\": 0\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/members/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"members",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Member Invalid Relationship",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"gender_id\": 999999,\r\n  \"role_id\": 999999\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/members/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"members",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Unauthorized Requests",
					"item": [
						{
							"name": "Create Gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{BASE}}/cast/genders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"genders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{BASE}}/cast/roles/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"roles",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Cast Member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/cast/members/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"members",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Forbidden Requests - Employee",
					"item": [
						{
							"name": "Create Gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"gender\": \"ads\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/genders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"genders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"role\": \"role\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/roles/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"roles",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Cast Member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/cast/members/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"members",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Genders",
					"item": [
						{
							"name": "Create Gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"GENDER_ID\", pm.response.json().data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Gender is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.gender).to.eql(\"Postman Gender\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"gender\": \"Postman Gender\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/genders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"genders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Duplicate Gender - Fail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.eql(\"fail\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"gender\": \"Postman Gender\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/genders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"genders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Gender is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.gender).to.eql(\"Edited Gender\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"gender\": \"Edited Gender\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/genders/{{GENDER_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"genders",
										"{{GENDER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Gender",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Gender is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.gender).to.eql(\"Edited Gender\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/genders/{{GENDER_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"genders",
										"{{GENDER_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Roles",
					"item": [
						{
							"name": "Create Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ROLE_ID\", pm.response.json().data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Role is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.role).to.eql(\"Postman Role\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"role\": \"Postman Role\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/roles/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"roles",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Duplicate Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.eql(\"fail\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"role\": \"Postman Role\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/roles/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"roles",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Role is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.role).to.eql(\"Edited Role\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"role\": \"Edited Role\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/roles/{{ROLE_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"roles",
										"{{ROLE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Role",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Role is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.role).to.eql(\"Edited Role\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/roles/{{ROLE_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"roles",
										"{{ROLE_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Members",
					"item": [
						{
							"name": "Create Member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"MEMBER_ID\", pm.response.json().data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Role is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.role.role).to.eql(\"Edited Role\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"{{$randomFirstName}}\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"gender_id\": {{GENDER_ID}},\r\n  \"role_id\": {{ROLE_ID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/members/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"members",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Name is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.name).to.eql(\"Postman\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"name\": \"Postman\",\r\n  \"last_name\": \"{{$randomLastName}}\",\r\n  \"gender_id\": {{GENDER_ID}},\r\n  \"role_id\": {{ROLE_ID}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/members/{{MEMBER_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"members",
										"{{MEMBER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Member",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Name is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.name).to.eql(\"Postman\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/cast/members/{{MEMBER_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"cast",
										"members",
										"{{MEMBER_ID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Films",
			"item": [
				{
					"name": "Invalid Requests",
					"item": [
						{
							"name": "Film Type Empty Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"film_type\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/types/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Film Type Whitespace Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"film_type\": \"        \"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/types/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Film Category Empty Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"category\": \"\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/categories/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"categories",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Film Category Whitespace Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"category\": \"        \"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/categories/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"categories",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Film Empty Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"\",\r\n  \"description\": \"\",\r\n  \"price\": 10,\r\n  \"stock\": 10,\r\n  \"availability\": 10,\r\n  \"release_date\": \"2022-10-14\",\r\n  \"film_type_id\": 1,\r\n  \"categories\": [\r\n    1\r\n  ],\r\n  \"cast\": [\r\n    1\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Film Whitespace Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"            \",\r\n  \"description\": \"          \",\r\n  \"price\": 0,\r\n  \"stock\": 0,\r\n  \"availability\": 0,\r\n  \"release_date\": \"2022-10-16\",\r\n  \"film_type_id\": 1,\r\n  \"categories\": [\r\n    1\r\n  ],\r\n  \"cast\": [\r\n    1\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Film Invalid Relationship",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"string\",\r\n  \"description\": \"string\",\r\n  \"price\": 0,\r\n  \"stock\": 0,\r\n  \"availability\": 0,\r\n  \"release_date\": \"2022-10-16\",\r\n  \"film_type_id\": 0,\r\n  \"categories\": [\r\n    0\r\n  ],\r\n  \"cast\": [\r\n    0\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Unauthorized Requests",
					"item": [
						{
							"name": "List Customers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE}}/films/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Film Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BASE}}/films/types/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Film Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{BASE}}/films/categories/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"categories",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/films/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Forbidden Requests",
					"item": [
						{
							"name": "Create Film Type - Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"film_type\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/types/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Film - Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"category\": \"{{$randomProductAdjective}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/categories/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"categories",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Film - Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/films/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Film Types",
					"item": [
						{
							"name": "Create Film Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"TYPE_ID\", pm.response.json().data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Type is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.film_type).to.eql(\"PostmanType\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"film_type\": \"PostmanType\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/types/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Duplicate Film Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.eql(\"fail\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"film_type\": \"PostmanType\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/types/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"types",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Film Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Type is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.film_type).to.eql(\"Edited\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"film_type\": \"Edited\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/types/{{TYPE_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"types",
										"{{TYPE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Film Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Gender is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.film_type).to.eql(\"Edited\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/types/{{TYPE_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"types",
										"{{TYPE_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Film Categories",
					"item": [
						{
							"name": "Create Film Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"CATEGORY_ID\", pm.response.json().data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Type is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.category).to.eql(\"Postman\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"category\": \"Postman\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/categories/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"categories",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Duplicate Film Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.eql(\"fail\");\r",
											"});\r",
											"\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"category\": \"Postman\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/categories/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"categories",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Film Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Category is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.category).to.eql(\"Edited\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"category\": \"Edited\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/categories/{{CATEGORY_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"categories",
										"{{CATEGORY_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Film Category",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Category is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.category).to.eql(\"Edited\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/categories/{{CATEGORY_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"categories",
										"{{CATEGORY_ID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Films",
					"item": [
						{
							"name": "Create Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"FILM_ID\", pm.response.json().data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Price is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.price).to.eql(25.50);\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"{{$randomProductName}}\",\r\n  \"description\": \"{{$randomCatchPhrase}}\",\r\n  \"price\": 25.50,\r\n  \"stock\": 20,\r\n  \"availability\": 20,\r\n  \"release_date\": \"2022-10-14\",\r\n  \"film_type_id\": {{TYPE_ID}},\r\n  \"categories\": [\r\n    {{CATEGORY_ID}}\r\n  ],\r\n  \"cast\": [\r\n    {{MEMBER_ID}}\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Price is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.price).to.eql(99.99);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"{{$randomProductName}}\",\r\n  \"description\": \"{{$randomCatchPhrase}}\",\r\n  \"price\": 99.99,\r\n  \"stock\": 20,\r\n  \"availability\": 20,\r\n  \"release_date\": \"2022-10-14\",\r\n  \"film_type_id\": {{TYPE_ID}},\r\n  \"categories\": [\r\n    {{CATEGORY_ID}}\r\n  ],\r\n  \"cast\": [\r\n    {{MEMBER_ID}}\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/{{FILM_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"{{FILM_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Film",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Price is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.price).to.eql(99.99);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/films/{{FILM_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"films",
										"{{FILM_ID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Invalid Requests",
					"item": [
						{
							"name": "Order Empty Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"return_date\": \"\",\r\n  \"returned\": false,\r\n  \"customer_id\": {{CUSTOMER_ID}},\r\n  \"films\": [\r\n    {{FILM_ID}}\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/orders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Whitespace Field",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"return_date\": \"          \",\r\n  \"returned\": false,\r\n  \"customer_id\": {{CUSTOMER_ID}},\r\n  \"films\": [\r\n    {{FILM_ID}}\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/orders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Invalid Relationship",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"return_date\": \"2022-10-17\",\r\n  \"returned\": false,\r\n  \"customer_id\": 9999999,\r\n  \"films\": [\r\n    {{FILM_ID}}\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/orders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Return Date in Past",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"return_date\": \"2020-10-17\",\r\n  \"returned\": false,\r\n  \"customer_id\": {{CUSTOMER_ID}},\r\n  \"films\": [\r\n    {{FILM_ID}}\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/orders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Return Date Too Far",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"return_date\": \"2022-11-11\",\r\n  \"returned\": false,\r\n  \"customer_id\": {{CUSTOMER_ID}},\r\n  \"films\": [\r\n    {{FILM_ID}}\r\n  ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/orders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Unauthorized Requests",
					"item": [
						{
							"name": "List Orders",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE}}/orders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BASE}}/orders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{BASE}}/orders/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/orders/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Orders",
					"item": [
						{
							"name": "Create Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"ORDER_ID\", pm.response.json().data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Return date is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.return_date).to.eql(\"2022-10-20\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"return_date\": \"2022-10-20\",\r\n  \"returned\": false,\r\n  \"customer_id\": {{CUSTOMER_ID}},\r\n  \"films\": [\r\n    {{FILM_ID}}\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/orders/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Return date is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.return_date).to.eql(\"2022-10-22\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"return_date\": \"2022-10-22\",\r\n  \"returned\": false,\r\n  \"customer_id\": {{CUSTOMER_ID}},\r\n  \"films\": [\r\n    {{FILM_ID}}\r\n  ]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/orders/{{ORDER_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										"{{ORDER_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Return date is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.return_date).to.eql(\"2022-10-22\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/orders/{{ORDER_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"orders",
										"{{ORDER_ID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Seasons",
			"item": [
				{
					"name": "Invalid Requests",
					"item": [
						{
							"name": "Season Invalid Relationship",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"number\": 1,\r\n  \"series_id\": 9999\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/seasons/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Unauthorized Requests",
					"item": [
						{
							"name": "List Seasons",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE}}/seasons/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Season",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BASE}}/seasons/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Season",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{BASE}}/seasons/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Season",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/seasons/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Forbidden Requests Copy",
					"item": [
						{
							"name": "Create Season - Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"number\": 0,\r\n  \"series_id\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/seasons/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Season - Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"number\": 0,\r\n  \"series_id\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/seasons/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Season - Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/seasons/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Seasons",
					"item": [
						{
							"name": "Create Season",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"SEASON_ID\", pm.response.json().data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Number is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.number).to.eql(1);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"number\": 1,\r\n  \"series_id\": {{FILM_ID}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/seasons/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Duplicate Season",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.eql(\"fail\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"number\": 1,\r\n  \"series_id\": {{FILM_ID}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/seasons/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Season",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Number is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.number).to.eql(2);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"number\": 2,\r\n  \"series_id\": {{FILM_ID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/seasons/{{SEASON_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										"{{SEASON_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Season",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Number is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.number).to.eql(2);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/seasons/{{SEASON_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"seasons",
										"{{SEASON_ID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Episodes",
			"item": [
				{
					"name": "Invalid Requests",
					"item": [
						{
							"name": "Episode Invalid Relationship",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Postman\",\r\n  \"number\": 0,\r\n  \"season_id\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/episodes/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Episode Empty FIeld",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"\",\r\n  \"number\": 0,\r\n  \"season_id\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/episodes/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Episode Whitespace FIeld",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 422\", function () {\r",
											"    pm.response.to.have.status(422);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"        \",\r\n  \"number\": 0,\r\n  \"season_id\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/episodes/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Unauthorized Requests",
					"item": [
						{
							"name": "List Episodes",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BASE}}/episodes/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{BASE}}/episodes/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{BASE}}/episodes/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not authenticated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Not authenticated\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/episodes/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Forbidden Requests Copy",
					"item": [
						{
							"name": "Create Episode - Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"string\",\r\n  \"number\": 0,\r\n  \"season_id\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/episodes/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Episode - Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"string\",\r\n  \"number\": 0,\r\n  \"season_id\": 0\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/episodes/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										"9999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Season - Employee",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											"\r",
											"pm.test(\"Detail not allowed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data).to.eql(\"Operation not allowed.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{EMPLOYEE_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{BASE}}/episodes/9999",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										"9999"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Episodes",
					"item": [
						{
							"name": "Create Episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.collectionVariables.set(\"EPISODE_ID\", pm.response.json().data.id);\r",
											"\r",
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"\r",
											"pm.test(\"Title is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.title).to.eql(\"Postman\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Postman\",\r\n  \"number\": 1,\r\n  \"season_id\": {{SEASON_ID}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/episodes/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Duplicate Episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Status message is correct\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.status).to.eql(\"fail\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Postman\",\r\n  \"number\": 1,\r\n  \"season_id\": {{SEASON_ID}}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/episodes/",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Title is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.title).to.eql(\"Edited\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Edited\",\r\n  \"number\": 1,\r\n  \"season_id\": {{SEASON_ID}}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/episodes/{{EPISODE_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										"{{EPISODE_ID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Episode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Title is correct\", function () {\r",
											"    var jsonData = pm.response.json().data;\r",
											"    pm.expect(jsonData.title).to.eql(\"Edited\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_ACCESS}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE}}/episodes/{{EPISODE_ID}}",
									"host": [
										"{{BASE}}"
									],
									"path": [
										"episodes",
										"{{EPISODE_ID}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Delete all postman records",
			"item": [
				{
					"name": "Delete Episode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/episodes/{{EPISODE_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"episodes",
								"{{EPISODE_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Season",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/seasons/{{SEASON_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"seasons",
								"{{SEASON_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/orders/{{ORDER_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"orders",
								"{{ORDER_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Film",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/films/{{FILM_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"films",
								"{{FILM_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Film Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/films/types/{{TYPE_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"films",
								"types",
								"{{TYPE_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Film Category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/films/categories/{{CATEGORY_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"films",
								"categories",
								"{{CATEGORY_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cast Member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/cast/members/{{MEMBER_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"cast",
								"members",
								"{{MEMBER_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cast Gender",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/cast/genders/{{GENDER_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"cast",
								"genders",
								"{{GENDER_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cast Role",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/cast/roles/{{ROLE_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"cast",
								"roles",
								"{{ROLE_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BASE}}/customers/{{CUSTOMER_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"customers",
								"{{CUSTOMER_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{ADMIN_ACCESS}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{BASE}}/users/{{EMPLOYEE_ID}}",
							"host": [
								"{{BASE}}"
							],
							"path": [
								"users",
								"{{EMPLOYEE_ID}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BASE",
			"value": "http://127.0.0.1:8000",
			"type": "string"
		},
		{
			"key": "ADMIN_ACCESS",
			"value": ""
		},
		{
			"key": "EMPLOYEE_ACCESS",
			"value": ""
		},
		{
			"key": "CUSTOMER_ID",
			"value": ""
		},
		{
			"key": "GENDER_ID",
			"value": ""
		},
		{
			"key": "ROLE_ID",
			"value": ""
		},
		{
			"key": "MEMBER_ID",
			"value": ""
		},
		{
			"key": "TYPE_ID",
			"value": ""
		},
		{
			"key": "CATEGORY_ID",
			"value": ""
		},
		{
			"key": "FILM_ID",
			"value": ""
		},
		{
			"key": "ORDER_ID",
			"value": ""
		},
		{
			"key": "SEASON_ID",
			"value": ""
		},
		{
			"key": "EPISODE_ID",
			"value": ""
		},
		{
			"key": "EMPLOYEE_ID",
			"value": ""
		}
	]
}